import { saveAs } from 'file-saver';
import { Document, Packer, Paragraph, TextRun } from 'docx';

export const exportToWordDocument = (tripData) => {
  const doc = new Document({
    sections: [{
      properties: {},
      children: [
        // Website Title
        new Paragraph({
          spacing: { before: 200, after: 200 },
          alignment: "CENTER",
          children: [
            new TextRun({ 
              text: "Tour It", 
              bold: true, 
              size: 40,
              color: "2E5090" 
            }),
          ],
        }),
        // Trip Title
        new Paragraph({
          spacing: { before: 200, after: 300 },
          alignment: "CENTER",
          children: [
            new TextRun({ 
              text: `Trip to ${tripData.location}`, 
              bold: true, 
              size: 32 
            }),
          ],
        }),
        new Paragraph({
          spacing: { before: 100, after: 100 },
          children: [
            new TextRun({ text: `Duration: ${tripData.duration}`, size: 24 }),
          ],
        }),
        new Paragraph({
          spacing: { before: 100, after: 200 },
          children: [
            new TextRun({ text: `Budget: ${tripData.budget}`, size: 24 }),
          ],
        }),
        new Paragraph({
          spacing: { before: 100, after: 200 },
          children: [
            new TextRun({ text: `Travelers: ${tripData.travelers}`, size: 24 }),
          ],
        }),
        // Hotels Section
        new Paragraph({
          spacing: { before: 300, after: 200 },
          children: [
            new TextRun({ 
              text: "Recommended Hotels:", 
              bold: true, 
              size: 28,
              color: "2E5090" 
            }),
          ],
        }),
        ...tripData.hotels.map(hotel => new Paragraph({
          spacing: { before: 100, after: 100 },
          children: [
            new TextRun({ text: `\n${hotel.hotelName}`, bold: true, size: 24 }),
            new TextRun({ text: `\nAddress: ${hotel.hotelAddress}` }),
            new TextRun({ text: `\nPrice: ${hotel.price}` }),
            new TextRun({ text: `\nRating: ${hotel.rating}★` }),
            new TextRun({ text: `\n${hotel.description}\n` }),
          ],
        })),
        // Itinerary Section
        new Paragraph({
          spacing: { before: 300, after: 200 },
          children: [
            new TextRun({ 
              text: "Itinerary:", 
              bold: true, 
              size: 28,
              color: "2E5090" 
            }),
          ],
        }),
        ...Object.entries(tripData.itinerary).map(([day, activity]) => [
          // Day heading in a separate paragraph
          new Paragraph({
            spacing: { before: 200, after: 100 },
            children: [
              new TextRun({ 
                text: `${day.charAt(0).toUpperCase()}${day.slice(1, 3)} ${day.slice(3)}`, 
                bold: true, 
                size: 24 
              }),
            ],
          }),
          // Theme and Best Time in a separate paragraph
          new Paragraph({
            spacing: { before: 50, after: 50 },
            children: [
              new TextRun({ text: `Theme: ${activity.theme}\n` }),
              new TextRun({ text: `Best Time to Visit: ${activity.bestTimeToVisit}` }),
            ],
          }),
          // Each place in its own paragraph
          ...activity.places.map(place => new Paragraph({
            spacing: { before: 100, after: 50 },
            children: [
              new TextRun({ text: place.placeName, bold: true, size: 20 }),
              new TextRun({ text: `\nDetails: ${place.placeDetails}` }),
              new TextRun({ text: `\nTicket Pricing: ${place.ticketPricing}` }),
              new TextRun({ text: `\nTime to Travel: ${place.timeToTravel}` }),
            ],
          })),
        ]).flat(),
        // Footer
        new Paragraph({
          spacing: { before: 300, after: 200 },
          alignment: "CENTER",
          children: [
            new TextRun({
              text: "Generated by TourIt © 2025",
              italic: true,
              size: 20,
              color: "808080"
            }),
          ],
        }),
      ],
    }],
  });

  Packer.toBlob(doc).then(blob => {
    saveAs(blob, `${tripData.location}_trip_plan.docx`);
  });
};