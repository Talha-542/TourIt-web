import jsPDF from 'jspdf';

export const exportToPdf = (tripData) => {
  try {
    const pdf = new jsPDF();
    let y = 20; // Starting y position
    const lineHeight = 10;
    const margin = 20;
    const pageWidth = pdf.internal.pageSize.width;

    // Helper function for centered text
    const addCenteredText = (text, fontSize = 16, isBold = false) => {
      pdf.setFontSize(fontSize);
      isBold ? pdf.setFont(undefined, 'bold') : pdf.setFont(undefined, 'normal');
      const textWidth = pdf.getStringUnitWidth(text) * fontSize / pdf.internal.scaleFactor;
      const x = (pageWidth - textWidth) / 2;
      pdf.text(text, x, y);
      y += lineHeight;
    };

    // Helper function for left-aligned text
    const addText = (text, fontSize = 12, isBold = false) => {
      pdf.setFontSize(fontSize);
      isBold ? pdf.setFont(undefined, 'bold') : pdf.setFont(undefined, 'normal');
      
      // Handle text wrapping
      const maxWidth = pageWidth - (2 * margin);
      const splitText = pdf.splitTextToSize(text, maxWidth);
      
      pdf.text(splitText, margin, y);
      y += (lineHeight * splitText.length);
    };

    // Add page break if needed
    const checkPageBreak = () => {
      if (y > pdf.internal.pageSize.height - 20) {
        pdf.addPage();
        y = 20;
      }
    };

    // Title
    addCenteredText('Tour It', 24, true);
    y += 5;
    addCenteredText(`Trip to ${tripData.location}`, 20, true);
    y += 5;

    // Trip Details
    addText(`Duration: ${tripData.duration}`, 14);
    addText(`Budget: ${tripData.budget}`, 14);
    addText(`Travelers: ${tripData.travelers}`, 14);
    y += 10;

    // Hotels Section
    checkPageBreak();
    addText('Recommended Hotels:', 16, true);
    y += 5;
    tripData.hotels.forEach(hotel => {
      checkPageBreak();
      addText(`${hotel.hotelName}`, 14, true);
      addText(`Address: ${hotel.hotelAddress}`);
      addText(`Price: ${hotel.price}`);
      addText(`Rating: ${hotel.rating}`);
      addText(`${hotel.description}`);
      y += 5;
    });

    // Itinerary Section
    y += 5;
    checkPageBreak();
    addText('Itinerary:', 16, true);
    y += 5;

    Object.entries(tripData.itinerary).forEach(([day, activity]) => {
      checkPageBreak();
      addText(`${day.charAt(0).toUpperCase()}${day.slice(1)}`, 14, true);
      addText(`Theme: ${activity.theme}`);
      addText(`Best Time to Visit: ${activity.bestTimeToVisit}`);
      y += 5;

      activity.places.forEach(place => {
        checkPageBreak();
        addText(`${place.placeName}`, 12, true);
        addText(`Details: ${place.placeDetails}`);
        addText(`Ticket Pricing: ${place.ticketPricing}`);
        addText(`Time to Travel: ${place.timeToTravel}`);
        y += 5;
      });
      y += 5;
    });

    // Footer
    checkPageBreak();
    y = pdf.internal.pageSize.height - 20;
    addCenteredText('Generated by TourIt Â© 2025', 10);

    // Save the PDF
    pdf.save(`${tripData.location}_trip_plan.pdf`);
  } catch (error) {
    console.error('Error generating PDF:', error);
  }
};
